name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the 'main' branch
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up .NET Core
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0

    # Restore .NET dependencies
    - name: Restore Dependencies
      run: dotnet restore

    # Build the project
    - name: Build Project
      run: dotnet build --no-restore

    # Run tests
    - name: Run Tests
      run: dotnet test --no-build --verbosity normal

    # Publish the Docker image
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Set in repository secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Set in repository secrets

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/sensor-management:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/sensor-management:latest

  deploy:
    name: Deploy to Server
    needs: build
    runs-on: ubuntu-latest

    steps:
    # SSH to the server and deploy
    - name: Deploy Application
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_HOST }}         # Set in repository secrets
        username: ${{ secrets.SERVER_USER }}     # Set in repository secrets
        key: ${{ secrets.SERVER_SSH_KEY }}       # Set in repository secrets
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/sensor-management:latest
          docker stop sensor-management || true
          docker rm sensor-management || true
          docker run -d -p 5000:5000 --name sensor-management ${{ secrets.DOCKER_USERNAME }}/sensor-management:latest
